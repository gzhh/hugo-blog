<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sed on gzhh&#39;s blog</title>
    <link>http://localhost:1313/tags/sed/</link>
    <description>Recent content in Sed on gzhh&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Nov 2017 18:42:35 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/sed/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>玩转sed操作文本-基础篇</title>
      <link>http://localhost:1313/posts/play-sed-first/</link>
      <pubDate>Fri, 17 Nov 2017 18:42:35 +0800</pubDate>
      <guid>http://localhost:1313/posts/play-sed-first/</guid>
      <description>介绍 sed 全名是 stream editor，是文本流处理方面的强大工具，和另一个文本处理工具 awk 工具有的一比，接下来就让我们简单介绍下它的基本使用和适用场景。 我们这篇主要讲的是 Gnu sed，还有一个常用的是 BSD sed（Mac OS就是源自 BSD 的），两者略微有点不同，不过他们俩都是由 Posix sed 演化而来。&#xA;基本格式 sed 命令的执行有两种基本格式 sed [-参数] command [file &amp;hellip;] sed [-参数] [-e command] [-f command_file] [-i extension]&#xA;参数 默认情况下，sed 不会操作原来的文本，加上 -i 参数则会改变原文件的内容 sed -i command [file &amp;hellip;]&#xA;替换 1.将文件中每行所有的字符 , 都替换为空字符(不加 g 标记则只替换每行第一个匹配) sed &#39;s/,/ /g&#39; file.txt 2.从第 N 处匹配开始替换 /ng sed &#39;s/,/ /2g&#39; file.txt 3.将字符 , 替换为空字符并保存替换后的内容 sed -i &#39;s/,/ /g&#39; file.</description>
    </item>
  </channel>
</rss>
